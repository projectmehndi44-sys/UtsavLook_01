rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is an admin by looking up their role in the 'teamMembers' collection.
      // Note: This requires the user to be logged in.
      return request.auth != null && exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // CONFIG: Allow any authenticated user to write, everyone can read.
    // This is a temporary measure to unblock development due to issues with isAdmin() checks.
    match /config/{docId} {
      allow read: if true;
      allow write: if request.auth != null; // Simplified rule to unblock
    }

    // TEAM MEMBERS: Only admins can manage team members.
    match /teamMembers/{userId} {
      allow read, write: if isAdmin();
    }

    // CUSTOMERS: Can read/write their own data. Admins can read/write any.
    match /customers/{userId} {
      allow read, update, delete: if isOwner(userId) || isAdmin();
      allow create: if request.auth.uid != null;
    }

    // ARTISTS: Publicly readable. Only artist or admin can edit.
    match /artists/{artistId} {
      allow read: if true;
      allow create, update, delete: if isOwner(artistId) || isAdmin();
    }

    // PENDING ARTISTS: Anyone can submit, only admins can read/delete.
    match /pendingArtists/{docId} {
        allow read, delete: if isAdmin();
        allow create: if true;
    }

    // BOOKINGS: Customers can create. Only involved parties or admins can read/update.
    match /bookings/{bookingId} {
        allow create: if request.auth != null; // Let the cloud function handle validation
        allow read, update: if isOwner(request.resource.data.customerId) || request.resource.data.artistIds[0] == request.auth.uid || isAdmin();
        allow delete: if isAdmin();
    }

    // NOTIFICATIONS: Users can only read their own notifications. Admins can read all.
    match /notifications/{notificationId} {
        allow read: if isOwner(resource.data.artistId) || isOwner(resource.data.customerId) || isAdmin();
        allow create, update, delete: if isAdmin(); // Only server/admin can create/delete
    }

    // PAYOUT HISTORY: Only admins can write. Involved artist can read.
    match /payoutHistory/{payoutId} {
        allow read: if isOwner(resource.data.artistId) || isAdmin();
        allow create, update, delete: if isAdmin();
    }
  }
}
