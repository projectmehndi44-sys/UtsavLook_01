rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isTeamMember() {
      return exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid));
    }
    // Correctly checks if the requesting user is a Super Admin.
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // --- Publicly Readable Data ---
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isOwner(artistId) || isAdmin();
    }
    match /config/{docId} {
      // Config documents like services, locations, and images can be read by anyone.
      allow read: if true;
      // Only admins can modify configuration. This is the key fix.
      allow write: if isAdmin();
    }

    // --- User Specific Data ---
    match /customers/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    match /notifications/{notificationId} {
      // User can read/update their own notifications
      allow read, update: if isOwner(request.resource.data.artistId) || isOwner(request.resource.data.customerId) || isAdmin();
      // Only backend functions can create notifications
      allow create: if false;
    }

    // --- Booking Data ---
    match /bookings/{bookingId} {
      // Users can only read their own bookings. Artists can read bookings they are assigned to. Admins can read all.
      allow read: if isOwner(get(resource.data.customerId).id) || request.auth.uid in resource.data.artistIds || isAdmin();
      // Bookings can only be created via the cloud function
      allow create: if false; 
      // Only specific fields can be updated by authorized users (e.g. status by artist/admin)
      allow update: if request.auth.uid in resource.data.artistIds || isAdmin();
    }
    
    // --- Pending Artists ---
    match /pendingArtists/{artistId} {
        // Anyone can submit a registration
        allow create: if true;
        // Only admins can read or delete pending artists
        allow read, delete: if isAdmin();
    }

    // --- Payout History ---
    match /payoutHistory/{payoutId} {
        // Only admins can create payout records.
        allow create: if isAdmin();
        // Artists can read their own history, admins can read all.
        allow read: if isOwner(resource.data.artistId) || isAdmin();
    }
    
    // --- Team Members (Admins) ---
    match /teamMembers/{userId} {
      // Only admins can read or manage team members.
      allow read, write: if isAdmin();
    }
  }
}
