rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if the user is an authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'config' collection
    match /config/{docId} {
      // Any authenticated user can read configuration.
      allow read: if isAuthenticated();
      // Only Super Admins can write to configuration.
      allow write: if request.auth != null && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Rules for 'artists', 'customers', and 'teamMembers'
    // Public read for artists, restricted write
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isOwner(artistId) || (get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin');
    }
    
    // Customers can only access their own data. Admins can access any.
    match /customers/{customerId} {
      allow read, write: if isOwner(customerId) || (get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin');
    }
    
    // Team members can only be managed by Super Admins
    match /teamMembers/{memberId} {
        allow read, write: if get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Rules for 'bookings'
    // Customers can read their own bookings. Artists can read bookings they are assigned to. Admins can read all.
    match /bookings/{bookingId} {
      allow read: if (isAuthenticated() && (resource.data.customerId == request.auth.uid || request.auth.uid in resource.data.artistIds)) || (get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin');
      // Writes are handled by Cloud Functions
      allow write: if false; 
    }
    
    // Other collections can be read by authenticated users, but not written to directly by clients.
    match /{collection}/{doc=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Default deny all writes unless specified above
    }

    // Allow read access to pending artists for admins
    match /pendingArtists/{artistId} {
        allow read: if get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
        allow create: if true; // Allow public creation
        allow delete: if get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }
  }
}
