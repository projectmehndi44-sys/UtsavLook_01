
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is a Super Admin
    function isAdmin() {
      // Check if the user is authenticated and if their role in the teamMembers collection is 'Super Admin'
      return request.auth != null && get(/databases/$(database)/documents/teamMembers/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Team members can only be managed by other Super Admins
    match /teamMembers/{userId} {
      allow read, write: if isAdmin();
    }
    
    // Config documents are publicly readable, but only writable by admins
    match /config/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Artists can be read by anyone, but only managed by admins
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Customers can be read by anyone, but only managed by admins
    match /customers/{customerId} {
      allow read, write: if isAdmin();
    }

    // Pending artists can only be managed by admins
    match /pendingArtists/{pendingId} {
        allow read, write: if isAdmin();
    }
    
    // Bookings can be created by any authenticated user.
    // They can be read/updated by the customer who owns them or an admin.
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.customerId || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Notifications are specific to a user (artist/customer/admin)
    match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.artistId;
    }
    
    // Payout history can only be managed by admins
    match /payoutHistory/{payoutId} {
        allow read, write: if isAdmin();
    }
  }
}
