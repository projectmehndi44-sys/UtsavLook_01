
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getMatchingMember() {
      // Returns a list containing the member object that matches the current user's ID.
      // This is a single expression using a filter, which is the correct syntax.
      return get(/databases/$(database)/documents/config/teamMembers).data.members
        .filter(member, member.id == request.auth.uid);
    }
    
    function isRole(role) {
      // Checks if a matching member exists and if their role matches the provided role.
      // This is now a single expression using the ternary operator.
      return getMatchingMember().size() > 0 && getMatchingMember()[0].role == role;
    }
    
    function isTeamMember() {
      // Checks if a user exists in the team members list.
      return getMatchingMember().size() > 0;
    }

    // --- Collection Rules ---

    match /artists/{artistId} {
      allow read: if true;
      allow write: if isTeamMember();
    }
    
    match /customers/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /bookings/{bookingId} {
      allow read: if isTeamMember() || isOwner(resource.data.customerId) || request.auth.uid in resource.data.artistIds;
      allow create: if isOwner(request.resource.data.customerId);
      allow update: if isTeamMember() || (request.auth.uid in resource.data.artistIds && request.resource.data.status == 'Completed');
    }

    match /payoutHistory/{payoutId} {
      allow read, create: if isTeamMember();
    }

    match /pendingArtists/{pendingId} {
      allow create: if true;
      allow read, delete: if isRole('Super Admin');
    }

    // --- Configuration Rules ---
    // This section is critical. It secures your config while allowing necessary access.

    match /config/teamMembers {
      // THE LOGIN FIX: Any signed-in user can read this document to verify their role.
      allow read: if request.auth != null; 
      // Only a Super Admin can change the team list.
      allow write: if isRole('Super Admin');
    }

    match /config/availableLocations {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/companyProfile {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/financialSettings {
      allow read: if isTeamMember();
      allow write: if isRole('Super Admin');
    }

    match /config/masterServices {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/placeholderImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/benefitImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/promotionalImage {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/promotions {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
  }
}
