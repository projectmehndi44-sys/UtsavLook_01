rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    
    // Returns true if the requesting user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Returns true if the requesting user's UID is in the list of team member IDs.
    function isTeamMember() {
      // Correct syntax: Use 'get()' to read the document and 'in' to check for presence in the list of IDs.
      return request.auth.uid in get(/databases/$(database)/documents/config/teamMembers).data.members.map(m => m.id);
    }
    
    // Returns true if the requesting user has a specific role (e.g., 'Super Admin').
    function isRole(role) {
      // Correct syntax: Use 'get()' to read the document and a comprehension with 'in' to check for a matching member.
      let members = get(/databases/$(database)/documents/config/teamMembers).data.members;
      return members.filter(m => m.id == request.auth.uid && m.role == role).size() > 0;
    }

    // --- Collection Rules ---

    // PUBLIC: Artists and master services can be read by anyone.
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isTeamMember();
    }

    // CUSTOMERS: Can only read/write their own data.
    match /customers/{userId} {
      allow read, write: if isOwner(userId);
    }

    // BOOKINGS: Customers can create. Admins/Assigned Artists can read/update.
    match /bookings/{bookingId} {
      allow read: if isTeamMember() || isOwner(resource.data.customerId) || request.auth.uid in resource.data.artistIds;
      allow create: if isOwner(request.resource.data.customerId);
      allow update: if isTeamMember() || (request.auth.uid in resource.data.artistIds && request.resource.data.status == 'Completed');
    }

    // PENDING ARTISTS: Anyone can create, only Super Admin can manage.
    match /pendingArtists/{pendingId} {
      allow create: if true;
      allow read, delete: if isRole('Super Admin');
    }

    // --- CONFIGURATION COLLECTION ---
    // Default deny for direct access to config collection.
    match /config/{document} {
      allow read, write: if false;
    }

    // Specific rules for documents within the 'config' collection.
    match /config/teamMembers {
      allow read: if request.auth != null; // Any signed-in user can read to verify role.
      allow write: if isRole('Super Admin');
    }
    
    match /config/availableLocations {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/companyProfile {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/financialSettings {
      allow read: if isTeamMember();
      allow write: if isRole('Super Admin');
    }

    match /config/masterServices {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/placeholderImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/benefitImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/promotionalImage {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/promotions {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
  }
}
