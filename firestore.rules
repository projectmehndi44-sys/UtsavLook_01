rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getTeamMemberRoles() {
      // Correctly retrieves the list of roles for the current user from the members array.
      // The syntax 'let var = ...' and 'list.filter(var, predicate)' is correct here.
      let members = get(/databases/$(database)/documents/config/teamMembers).data.members;
      let matchingMembers = members.filter(member, member.id == request.auth.uid);
      if (matchingMembers.size() > 0) {
        // Assuming one user has one role entry.
        return [matchingMembers[0].role];
      }
      return [];
    }
    
    function isRole(role) {
      // Correctly checks if the specified role is in the user's list of roles.
      return role in getTeamMemberRoles();
    }
    
    function isTeamMember() {
      // Correctly checks if the user has any role assigned, meaning they are a team member.
      return getTeamMemberRoles().size() > 0;
    }

    // --- Collection Rules ---

    match /artists/{artistId} {
      allow read: if true;
      allow write: if isTeamMember();
    }
    
    match /customers/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /bookings/{bookingId} {
      allow read: if isTeamMember() || isOwner(resource.data.customerId) || request.auth.uid in resource.data.artistIds;
      allow create: if isOwner(request.resource.data.customerId);
      allow update: if isTeamMember() || (request.auth.uid in resource.data.artistIds && request.resource.data.status == 'Completed');
    }

    match /pendingArtists/{pendingId} {
      allow create: if true;
      allow read, delete: if isRole('Super Admin');
    }

    // --- Configuration Rules ---

    // Default deny access to the config collection itself
    match /config/{document} {
      allow read, write: if false;
    }
    
    // Specific rules for documents within the config collection
    match /config/teamMembers {
      allow read: if request.auth != null; // Any signed-in user can read to have their role verified.
      allow write: if isRole('Super Admin');
    }

    match /config/availableLocations {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/companyProfile {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/financialSettings {
      allow read: if isTeamMember();
      allow write: if isRole('Super Admin');
    }

    match /config/masterServices {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/placeholderImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/benefitImages {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
    
    match /config/promotionalImage {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /config/promotions {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }
  }
}
